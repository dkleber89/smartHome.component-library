{
  "Story": {
    "prefix": "story",
    "body": [
      "import React, { ReactElement } from 'react';",
      "import { action } from '@storybook/addon-actions';",
      "import { withKnobs } from '@storybook/addon-knobs';",
      "",
      "import { ${TM_FILENAME_BASE/(.*)\\..+$/$1/} } from './${TM_FILENAME_BASE/(.*)\\..+$/$1/}';",
      "",
      "export default {",
      "  title: '${TM_FILENAME_BASE/(.*)\\..+$/$1/}',",
      "  component: ${TM_FILENAME_BASE/(.*)\\..+$/$1/},",
      "  decorators: [withKnobs],",
      "  parameters: {",
      "    info: `",
      "    ### Additional Markdown Information about this Component",
      "    `,",
      "  },",
      "};",
      "",
      "export const Default = (): ReactElement => (",
      "  <${TM_FILENAME_BASE/(.*)\\..+$/$1/} />",
      ");"
    ],
    "description": "Story"
  },
  "Component": {
    "prefix": "component",
    "body": [
      "import React, { ReactElement } from 'react';",
      "import styled from 'styled-components';",
      "",
      "export interface I${TM_FILENAME_BASE}Props {",
      "  /** Component className */",
      "  className?: string;",
      "}",
      "",
      "const Styled${TM_FILENAME_BASE} = styled.${1:HtmlElement}``;",
      "",
      "Styled${TM_FILENAME_BASE}.displayName = 'Styled${TM_FILENAME_BASE}';",
      "",
      "const ${TM_FILENAME_BASE} = ({ className }: I${TM_FILENAME_BASE}Props): ReactElement => {",
      "  return <Styled${TM_FILENAME_BASE} className={className} />;",
      "};",
      "",
      "export { ${TM_FILENAME_BASE} };",
      ""
    ],
    "description": "Component"
  }
}
